//  PLATO SIMULATOR CONFIGURATION FILE
//  JSON5 is being used primarily so that we can add comments to this file.
//----------------------------------------------------------------------------------
{
    //-----------------------------------------------------------------
    //  SIMULATOR
    //-----------------------------------------------------------------
    "DtStart": "2019-01-01",    // simulation start date for each generation
    "DtStop": "2019-12-31",     // simulation stop date for each generation
    "Generations": 20,          // how many generations should the simulator run
    "PopulationSize": 200,      // Total number Investors in the population
    "C1": "USD",                // main currency  (ISO 4217 code)
    "C2": "JPY",                // currency that we will invest in (ISO 4217 code)
    "InitFunds": 100000.00,     // how much each Investor is funded at the start of a simulation cycle
    "StdInvestment": 10000.00,  // the "standard" investment amount if a decision is made to invest in C2
    "MutationRate": 1,          // number between 1 and 100, indicating the percentage of mutation
    "DBSource": "CSV",          // { CSV | Database | OnlineService }

    //-----------------------------------------------------------------
    //  INFLUENCER SUBCLASSES
    //  Comment out the subclasses you don't want in the simulation (insert double slashes // at the beginning )
    //  Uncomment subclasses you want in the simulation (remove the double slashes //)
    //-----------------------------------------------------------------
    "InfluencerSubclasses": [
      "CCInfluencer",
      "DRInfluencer",
      "URInfluencer",
      // "IRInfluencer",
      "MSInfluencer"
    ],

    //-----------------------------------------------------------------
    //  CC - Consumer Confidence
    //-----------------------------------------------------------------
    "CCMinDelta1": -180,        // greatest amount of time prior to T3 that T1 can be
    "CCMaxDelta1": -90,         // least amount of time prior to T3 that T1 can be
    "CCMinDelta2": -60,         // greatest amount of time prior to T3 that T2 can be, constraint: MaxDelta2 > MaxDelta1
    "CCMaxDelta2": -30,         // least amount of time prior to T3 that T2 can be, with the constraint that MinDelta1 < MaxDelta2
    "CCW1": 0.6,                // DRInfluencer Fitness Score weighting for "correctness" of predictions. Constraint: DRW1 + DRW2 = 1.0
    "CCW2": 0.4,                // DRInfluencer Fitness Score weighting for number of predictions made. Constraint: DRW1 + DRW2 = 1.0

    //-----------------------------------------------------------------
    //  DR - Discount Rate
    //-----------------------------------------------------------------
    "DRMinDelta1": -30,         // greatest amount of time prior to T3 that T1 can be
    "DRMaxDelta1": -6,          // least amount of time prior to T3 that T1 can be
    "DRMinDelta2": -5,          // greatest amount of time prior to T3 that T2 can be, constraint: MaxDelta2 > MaxDelta1
    "DRMaxDelta2": -1,          // least amount of time prior to T3 that T2 can be, with the constraint that MinDelta1 < MaxDelta2
    "DRW1": 0.6,                // DRInfluencer Fitness Score weighting for "correctness" of predictions. Constraint: DRW1 + DRW2 = 1.0
    "DRW2": 0.4,                // DRInfluencer Fitness Score weighting for number of predictions made. Constraint: DRW1 + DRW2 = 1.0

    //-----------------------------------------------------------------
    //  IR - Inflation Rate
    //-----------------------------------------------------------------
    "IRMinDelta1": -180,        // greatest amount of time prior to T3 
    "IRMaxDelta1": -90,         // least amount of time prior to T3
    "IRMinDelta2": -60,         // greatest amount of time prior to T3 that T2 can be, constraint: MaxDelta2 > MaxDelta1
    "IRMaxDelta2": -30,         // least amount of time prior to T3 that T2 can be, with the constraint that MinDelta1 < MaxDelta2
    "IRW1": 0.6,                // IRInfluencer Fitness Score weighting for "correctness" of predictions. Constraint: IRW1 + IRW2 = 1.0
    "IRW2": 0.4,                // IRInfluencer Fitness Score weighting for number of predictions made. Constraint: IRW1 + IRW2 = 1.0

    //-----------------------------------------------------------------
    //  MS - Money Supply
    //-----------------------------------------------------------------
    "MSMinDelta1": -180,        // greatest amount of time prior to T3 
    "MSMaxDelta1": -90,         // least amount of time prior to T3
    "MSMinDelta2": -60,         // greatest amount of time prior to T3 that T2 can be, constraint: MaxDelta2 > MaxDelta1
    "MSMaxDelta2": -30,         // least amount of time prior to T3 that T2 can be, with the constraint that MinDelta1 < MaxDelta2
    "MSW1": 0.6,                // MSInfluencer Fitness Score weighting for "correctness" of predictions. Constraint: MSW1 + MSW2 = 1.0
    "MSW2": 0.4,                // MSInfluencer Fitness Score weighting for number of predictions made. Constraint: MSW1 + MSW2 = 1.0

    //-----------------------------------------------------------------
    //  UR - Unemployment Rate
    //-----------------------------------------------------------------
    "URMinDelta1": -180,        // least amount of time prior to T3
    "URMaxDelta1": -90,         // closes time prior to T3
    "URMinDelta2": -60,         // greatest amount of time prior to T3 that T2 can be, constraint: MaxDelta2 > MaxDelta1
    "URMaxDelta2": -30,         // least amount of time prior to T3 that T2 can be, with the constraint that MinDelta1 < MaxDelta2
    "URW1": 0.6,                // URInfluencer Fitness Score weighting for "correctness" of predictions. Constraint: URW1 + URW2 = 1.0
    "URW2": 0.4,                // URInfluencer Fitness Score weighting for number of predictions made. Constraint: URW1 + URW2 = 1.0

    //-----------------------------------------------------------------
    //  INVESTOR
    //-----------------------------------------------------------------
    "MinDelta4":  1,            // shortest period of time after a "buy" on T3 that we can do a "sell" 
    "MaxDelta4":  14,           // greatest period of time after a "buy" on T3 that we can do a "sell"
    "InvW1": 0.5,               // Investor Fitness Score weighting for "correctness" of predictions. Constraint: InvW1 + InvW2 = 1.0
    "InvW2": 0.5,               // Investor Fitness Score weighting for profit. Constraint: InvW1 + InvW2 = 1.0
    "lastline": "ignore"
}